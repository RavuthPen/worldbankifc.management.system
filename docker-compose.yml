version: "3.8"

services:
    # PHP Service
    php:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=app
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 8000:8000
        depends_on:
            - database
            - redis
    # PHP Service
    websocket:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=websocket
        working_dir: /var/www
        volumes:
            - ./:/var/www
        ports:
            - 6001:6001
        depends_on:
            - database
            - redis
    # app:
    #     container_name: app
    #     build: #
    #         context: .
    #         target: php
    #     working_dir: /var/www/app
    #     volumes:
    #         - ./:/var/www/app
    #     ports:
    #         - 8000:8000
    #     depends_on:
    #         - database
    #         - redis
    # Database server
    database:
        image: mysql:latest
        ports:
            - 3306:3306
        environment:
            - MYSQL_DATABASE=${DB_DATABASE}
            - MYSQL_USER=${DB_USERNAME}
            - MYSQL_PASSWORD=${DB_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
        volumes:
            - db-data:/var/lib/mysql
    #phpmyadmin
    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        ports:
            - 8080:80
        links:
            - database
        environment:
            PMA_HOUST: database
            PMA_PORT: 3306
            PMA_ARBITRARY: 1
        volumes:
            - .docker/phpmyadmin/session:/session
    # admin
    adminer:
        image: adminer
        ports:
            - 9890:8080
        depends_on:
            - database
    # Radis Server
    redis:
        image: redis:alpine
        command: redis-server --appendonly yes --requirepass "${REDIS_PASSWORD}"
        ports:
            - 6379:6379
    # Queue Server
    queue:
        build:
            context: .
            target: php
            args:
                - APP_ENV=${APP_ENV}
        environment:
            - APP_ENV=${APP_ENV}
            - CONTAINER_ROLE=queue
        working_dir: /var/www
        volumes:
            - ./:/var/www

    # Node Server
    node:
        build:
            context: .
            target: node
        volumes:
            - .:/usr/src
            - ./node_modules:/usr/src/node_modules
        tty: true

volumes:
    db-data: ~
